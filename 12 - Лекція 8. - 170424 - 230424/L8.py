# 1. Создадим список `cats` из 100 элементов, где изначально каждый элемент равен 0, это значит, что у кошки нет шляпы.

# 2. Для каждого числа `i` от 1 до 100 выполним следующие шаги:
# где: - `i` это номер круга;
#      - `j` это кошка или точнее её индекс;
# - Переберем каждую j-ю кошку, начиная с индекса `i-1`, до 100, с шагом `i` (так как i=1, а индекс начинатся с нуля, то j = 0 = (i-1), то есть от 0 до 99 включительно).
# - Если у кошки нет шляпы (значение равно 0), поставим ей шляпу (изменим значение на 1). В противном случае снимим шляпу (изменим значение на 0).

# 3. После завершения всех итераций, создадим список `hatted_cats`, содержащий номера кошек, у которых в конце остались шляпы. Используем функцию enumerate чтобы получить данные, 
# состоящие из индекса элемента и самого элемента при каждой итерации, в данном случае нам необходимо значение элемента 1, что значит шляпа на голове кошки. 
# И будем перебирать все индексы.

# 4. Выведим `hatted_cats` на экран списком без квадратных скобок. Переведем элементы в строку и соеденим их запятой и пробелом, используя функции str и .join соответственно.

# Сложность моего алгоритма O(n log n)


cats = [0] * 100

for i in range(1, 101):
    for j in range(i-1, 100, i):
        if cats[j] == 0:
            cats[j] = 1
        else:
            cats[j] = 0

hatted_cats = []
for index, cat in enumerate(cats):
    if cat == 1:
        hatted_cats.append(index + 1)

result_str = ', '.join(str(cat) for cat in hatted_cats)
print("Cats with hats at the end:", result_str)